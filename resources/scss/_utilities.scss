// ==========================================================================
// Palette Function
//
// Creates a convenience function so that references to color palette maps
// are shortened and easier.
//
// Original:
// map-get($palettes(map-get($blue, 'xx-dark')))
//
// Using Function:
// palette(blue, xx-dark)
// ==========================================================================

@function palette($palette, $shade: 'base') {
    @return map-get(map-get($palettes, $palette), $shade);
}

// ==========================================================================
// Cross Browser Mixins
// ==========================================================================


// Border Radius
@mixin border-radius($radius) {
    -webkit-border-radius:		$radius;
    -moz-border-radius: 		$radius;
    -ms-border-radius: 			$radius;
    border-radius: 				$radius;
}

// Transitions
@mixin transition($transition) {
    -webkit-transition: $transition;
    -moz-transition: $transition;
    -o-transition: $transition;
    transition: $transition;
}

// Transforms
@mixin transform($transform) {
    -webkit-transform: $transform;
    -moz-transform: $transform;
    -o-transform: $transform;
    transform: $transform;
}

// Box Sizing
@mixin box-sizing($border-box) {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    box-sizing: border-box;
}

// Box Shadow
@mixin box-shadow($box-shadow) {
    -webkit-box-shadow: $box-shadow;
    -moz-box-shadow: $box-shadow;
    box-shadow: $box-shadow;
}

// Flexbox
@mixin flexbox {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

// Visual Hide
// Hides visually, but not from Screen Readers
@mixin visual-hide {
    border: 0;
    clip: rect(1px, 1px, 1px, 1px);
    overflow:hidden;
    padding:0;
    position: absolute;
}

@mixin visual-show {
    clip: auto;
    overflow: auto;
    padding: inherit;
    position: static;
}


// Transitions
@mixin trans-defined($transition-property, $transition-timing, $transition-duration) {
    -webkit-transition-property: $transition-property;
       -moz-transition-property: $transition-property;
             -o-transition-property: $transition-property;
                    transition-property: $transition-property;
    -webkit-transition-duration: $transition-duration;
       -moz-transition-duration: $transition-duration;
             -o-transition-duration: $transition-duration;
                    transition-duration: $transition-duration;
     transition-timing-function: $transition-timing;
            -webkit-timing-function: $transition-timing;
               -moz-timing-function: $transition-timing;
                     -o-timing-function: $transition-timing;
}

// Colors
@mixin days($color-main) {
  color: $color-main;
}

@mixin icon-font($font-size: 1em, $margin-right: 0.50em) {
    font-family: "FontAwesome";
    font-size: $font-size;
    margin-right: $margin-right;
}
